version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: software_tools_zookeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - software_tools_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: software_tools_kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: software_tools_zookeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://software_tools_kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    networks:
      - software_tools_network
    healthcheck:
      test: ['CMD', 'bash', '-c', 'nc -z localhost 9092 || exit -1']
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    container_name: software_tools_kafka_topics_generator
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics --create --topic=topic1 --if-not-exists --bootstrap-server=software_tools_kafka:9092 && 
        kafka-topics --create --topic=topic2 --if-not-exists --bootstrap-server=software_tools_kafka:9092"
    networks:
      - software_tools_network

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    container_name: software_tools_control_center
    hostname: control_center
    depends_on:
      - kafka
    ports:
      - '9021:9021'
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'software_tools_kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    networks:
      - software_tools_network

networks:
  software_tools_network:
    external: true
